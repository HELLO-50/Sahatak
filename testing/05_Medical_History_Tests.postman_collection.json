{
	"info": {
		"name": "05 - Medical History Management Tests",
		"description": "Test patient medical history creation, retrieval, updates, and doctor access permissions",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Patient Medical History Creation",
			"item": [
				{
					"name": "Complete Initial Medical History",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{patient_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"height\": 170,\n  \"weight\": 65,\n  \"blood_type\": \"O+\",\n  \"allergies\": [\"Peanuts\", \"Shellfish\", \"Penicillin\"],\n  \"chronic_conditions\": [\"Hypertension\", \"Diabetes Type 2\"],\n  \"current_medications\": [\n    {\n      \"name\": \"Metformin\",\n      \"dosage\": \"500mg\",\n      \"frequency\": \"twice daily\",\n      \"prescribing_doctor\": \"Dr. Sarah Wilson\"\n    },\n    {\n      \"name\": \"Lisinopril\",\n      \"dosage\": \"10mg\",\n      \"frequency\": \"once daily\",\n      \"prescribing_doctor\": \"Dr. Michael Brown\"\n    }\n  ],\n  \"family_medical_history\": {\n    \"diabetes\": \"Father - Type 2 Diabetes diagnosed at age 45\",\n    \"heart_disease\": \"Mother - Coronary artery disease at age 60\",\n    \"cancer\": \"Grandmother (maternal) - Breast cancer at age 70\"\n  },\n  \"previous_surgeries\": [\n    {\n      \"procedure\": \"Appendectomy\",\n      \"date\": \"2018-03-15\",\n      \"hospital\": \"Khartoum Teaching Hospital\",\n      \"surgeon\": \"Dr. Ahmed Hassan\"\n    }\n  ],\n  \"smoking_status\": \"never\",\n  \"alcohol_consumption\": \"occasional\",\n  \"exercise_frequency\": \"3-4 times per week\",\n  \"dietary_preferences\": \"Mediterranean diet\",\n  \"emergency_contact\": {\n    \"name\": \"John Smith\",\n    \"relationship\": \"spouse\",\n    \"phone\": \"+249555987654\"\n  },\n  \"insurance_provider\": \"Sudan National Health Insurance\",\n  \"insurance_number\": \"SNHI123456789\",\n  \"preferred_language\": \"English\",\n  \"additional_notes\": \"Patient reports occasional episodes of dizziness, especially in the morning. Regular exercise routine includes walking and swimming.\"\n}"
						},
						"url": {
							"raw": "{{backend_url}}/medical-history/complete",
							"host": ["{{backend_url}}"],
							"path": ["medical-history", "complete"]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Medical history created successfully', function () {",
									"    pm.response.to.have.status(201);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.data).to.have.property('medical_history_id');",
									"    pm.expect(jsonData.data.medical_history_completed).to.be.true;",
									"    ",
									"    // Save for other tests",
									"    pm.environment.set('medical_history_id', jsonData.data.medical_history_id);",
									"    console.log('Medical history ID saved:', jsonData.data.medical_history_id);",
									"});"
								]
							}
						}
					]
				},
				{
					"name": "Add Vaccination Record",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{patient_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"vaccine_name\": \"COVID-19 Pfizer-BioNTech\",\n  \"date_administered\": \"2023-10-15\",\n  \"location\": \"Khartoum Vaccination Center\",\n  \"batch_number\": \"CV19PF2023-A45\",\n  \"administered_by\": \"Dr. Fatima Al-Rashid\",\n  \"next_dose_due\": \"2024-10-15\",\n  \"side_effects\": \"Mild arm soreness for 24 hours\",\n  \"notes\": \"Second booster dose, patient tolerated well\"\n}"
						},
						"url": {
							"raw": "{{backend_url}}/medical-history/vaccinations",
							"host": ["{{backend_url}}"],
							"path": ["medical-history", "vaccinations"]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Vaccination record added successfully', function () {",
									"    pm.response.to.have.status(201);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.data).to.have.property('vaccination_id');",
									"    ",
									"    // Save vaccination ID",
									"    pm.environment.set('vaccination_id', jsonData.data.vaccination_id);",
									"});"
								]
							}
						}
					]
				},
				{
					"name": "Add Lab Test Result",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{patient_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"test_name\": \"Complete Blood Count (CBC)\",\n  \"test_date\": \"2024-01-20\",\n  \"ordering_doctor\": \"Dr. Michael Brown\",\n  \"lab_facility\": \"Khartoum Medical Laboratory\",\n  \"results\": {\n    \"hemoglobin\": {\n      \"value\": 13.2,\n      \"unit\": \"g/dL\",\n      \"reference_range\": \"12.0-16.0\",\n      \"status\": \"normal\"\n    },\n    \"white_blood_cells\": {\n      \"value\": 7.2,\n      \"unit\": \"×10³/μL\",\n      \"reference_range\": \"4.0-11.0\",\n      \"status\": \"normal\"\n    },\n    \"platelets\": {\n      \"value\": 285,\n      \"unit\": \"×10³/μL\",\n      \"reference_range\": \"150-450\",\n      \"status\": \"normal\"\n    },\n    \"hematocrit\": {\n      \"value\": 40.1,\n      \"unit\": \"%\",\n      \"reference_range\": \"36.0-48.0\",\n      \"status\": \"normal\"\n    }\n  },\n  \"interpretation\": \"All values within normal limits. No signs of infection or anemia.\",\n  \"follow_up_required\": false,\n  \"next_test_recommended\": \"2024-07-20\",\n  \"notes\": \"Routine monitoring for diabetes management. Patient fasting status confirmed.\"\n}"
						},
						"url": {
							"raw": "{{backend_url}}/medical-history/lab-results",
							"host": ["{{backend_url}}"],
							"path": ["medical-history", "lab-results"]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Lab result added successfully', function () {",
									"    pm.response.to.have.status(201);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.data).to.have.property('lab_result_id');",
									"    ",
									"    // Save lab result ID",
									"    pm.environment.set('lab_result_id', jsonData.data.lab_result_id);",
									"});"
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "Medical History Retrieval",
			"item": [
				{
					"name": "Get Complete Medical History (Patient)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{patient_token}}"
							}
						],
						"url": {
							"raw": "{{backend_url}}/medical-history/complete",
							"host": ["{{backend_url}}"],
							"path": ["medical-history", "complete"]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Patient can access own medical history', function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.data).to.have.property('basic_info');",
									"    pm.expect(jsonData.data).to.have.property('allergies');",
									"    pm.expect(jsonData.data).to.have.property('chronic_conditions');",
									"    pm.expect(jsonData.data).to.have.property('current_medications');",
									"    pm.expect(jsonData.data).to.have.property('vaccinations');",
									"    pm.expect(jsonData.data).to.have.property('lab_results');",
									"    pm.expect(jsonData.data).to.have.property('family_history');",
									"});"
								]
							}
						}
					]
				},
				{
					"name": "Get Medical History Summary",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{patient_token}}"
							}
						],
						"url": {
							"raw": "{{backend_url}}/medical-history/summary",
							"host": ["{{backend_url}}"],
							"path": ["medical-history", "summary"]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Medical history summary retrieved', function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.data).to.have.property('completion_status');",
									"    pm.expect(jsonData.data).to.have.property('last_updated');",
									"    pm.expect(jsonData.data).to.have.property('critical_alerts');",
									"});"
								]
							}
						}
					]
				},
				{
					"name": "Get Vaccination History",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{patient_token}}"
							}
						],
						"url": {
							"raw": "{{backend_url}}/medical-history/vaccinations",
							"host": ["{{backend_url}}"],
							"path": ["medical-history", "vaccinations"]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Vaccination history retrieved', function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.data.vaccinations).to.be.an('array');",
									"});"
								]
							}
						}
					]
				},
				{
					"name": "Get Lab Results History",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{patient_token}}"
							}
						],
						"url": {
							"raw": "{{backend_url}}/medical-history/lab-results?limit=10&sort=date_desc",
							"host": ["{{backend_url}}"],
							"path": ["medical-history", "lab-results"],
							"query": [
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "sort",
									"value": "date_desc"
								}
							]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Lab results history retrieved', function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.data.lab_results).to.be.an('array');",
									"});"
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "Doctor Access to Patient History",
			"item": [
				{
					"name": "Doctor Access Patient Medical History (With Permission)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{doctor_token}}"
							}
						],
						"url": {
							"raw": "{{backend_url}}/medical-history/patient/{{patient_id}}",
							"host": ["{{backend_url}}"],
							"path": ["medical-history", "patient", "{{patient_id}}"]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Doctor can access patient history (with appointment)', function () {",
									"    // This should succeed if doctor has an appointment with patient",
									"    // or fail with 403 if no appointment relationship exists",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 403]);",
									"    ",
									"    if (pm.response.code === 200) {",
									"        var jsonData = pm.response.json();",
									"        pm.expect(jsonData.success).to.be.true;",
									"        pm.expect(jsonData.data).to.have.property('patient_info');",
									"        pm.expect(jsonData.data).to.have.property('medical_summary');",
									"        console.log('Doctor successfully accessed patient history');",
									"    } else {",
									"        console.log('Access denied - no appointment relationship');",
									"    }",
									"});"
								]
							}
						}
					]
				},
				{
					"name": "Doctor Access Medical History Summary",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{doctor_token}}"
							}
						],
						"url": {
							"raw": "{{backend_url}}/medical-history/patient/{{patient_id}}/summary",
							"host": ["{{backend_url}}"],
							"path": ["medical-history", "patient", "{{patient_id}}", "summary"]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Doctor can access medical summary', function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 403]);",
									"    ",
									"    if (pm.response.code === 200) {",
									"        var jsonData = pm.response.json();",
									"        pm.expect(jsonData.success).to.be.true;",
									"        pm.expect(jsonData.data).to.have.property('allergies');",
									"        pm.expect(jsonData.data).to.have.property('chronic_conditions');",
									"        pm.expect(jsonData.data).to.have.property('current_medications');",
									"    }",
									"});"
								]
							}
						}
					]
				},
				{
					"name": "Doctor Access Recent Lab Results",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{doctor_token}}"
							}
						],
						"url": {
							"raw": "{{backend_url}}/medical-history/patient/{{patient_id}}/lab-results?recent=true&limit=5",
							"host": ["{{backend_url}}"],
							"path": ["medical-history", "patient", "{{patient_id}}", "lab-results"],
							"query": [
								{
									"key": "recent",
									"value": "true"
								},
								{
									"key": "limit",
									"value": "5"
								}
							]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Doctor can access recent lab results', function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 403]);",
									"    ",
									"    if (pm.response.code === 200) {",
									"        var jsonData = pm.response.json();",
									"        pm.expect(jsonData.success).to.be.true;",
									"        pm.expect(jsonData.data.lab_results).to.be.an('array');",
									"    }",
									"});"
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "Medical History Updates",
			"item": [
				{
					"name": "Update Basic Information",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{patient_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"weight\": 67,\n  \"blood_pressure_systolic\": 125,\n  \"blood_pressure_diastolic\": 82,\n  \"exercise_frequency\": \"4-5 times per week\",\n  \"dietary_changes\": \"Started following low-sodium diet as recommended by cardiologist\",\n  \"new_symptoms\": \"Occasional morning headaches, duration 2-3 weeks\",\n  \"medication_adherence\": \"Taking all medications as prescribed, no missed doses\",\n  \"lifestyle_changes\": \"Reduced caffeine intake, increased water consumption\"\n}"
						},
						"url": {
							"raw": "{{backend_url}}/medical-history/update/basic-info",
							"host": ["{{backend_url}}"],
							"path": ["medical-history", "update", "basic-info"]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Basic information updated successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.data).to.have.property('last_updated');",
									"});"
								]
							}
						}
					]
				},
				{
					"name": "Add New Allergy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{patient_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"allergen\": \"Latex\",\n  \"reaction_type\": \"Contact dermatitis\",\n  \"severity\": \"moderate\",\n  \"first_occurrence\": \"2024-01-10\",\n  \"circumstances\": \"During routine dental procedure\",\n  \"treatment_required\": \"Antihistamines and topical corticosteroid\",\n  \"confirmed_by_doctor\": true,\n  \"confirming_doctor\": \"Dr. Ahmed Khalil\"\n}"
						},
						"url": {
							"raw": "{{backend_url}}/medical-history/allergies",
							"host": ["{{backend_url}}"],
							"path": ["medical-history", "allergies"]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('New allergy added successfully', function () {",
									"    pm.response.to.have.status(201);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.data).to.have.property('allergy_id');",
									"});"
								]
							}
						}
					]
				},
				{
					"name": "Update Medication List",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{patient_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"medications\": [\n    {\n      \"id\": \"existing_med_1\",\n      \"name\": \"Metformin\",\n      \"dosage\": \"750mg\",\n      \"frequency\": \"twice daily\",\n      \"prescribing_doctor\": \"Dr. Sarah Wilson\",\n      \"start_date\": \"2023-06-15\",\n      \"notes\": \"Increased dosage due to elevated HbA1c levels\",\n      \"status\": \"active\"\n    },\n    {\n      \"name\": \"Lisinopril\",\n      \"dosage\": \"10mg\",\n      \"frequency\": \"once daily\",\n      \"prescribing_doctor\": \"Dr. Michael Brown\",\n      \"start_date\": \"2023-08-20\",\n      \"status\": \"active\"\n    },\n    {\n      \"name\": \"Amlodipine\",\n      \"dosage\": \"5mg\",\n      \"frequency\": \"once daily\",\n      \"prescribing_doctor\": \"Dr. Michael Brown\",\n      \"start_date\": \"2024-01-25\",\n      \"notes\": \"Added for better blood pressure control\",\n      \"status\": \"active\"\n    }\n  ],\n  \"update_reason\": \"Added new BP medication, increased Metformin dosage per doctor recommendation\"\n}"
						},
						"url": {
							"raw": "{{backend_url}}/medical-history/medications",
							"host": ["{{backend_url}}"],
							"path": ["medical-history", "medications"]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Medication list updated successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.data).to.have.property('medications_count');",
									"});"
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "Medical History Analytics",
			"item": [
				{
					"name": "Get Health Trends (Patient)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{patient_token}}"
							}
						],
						"url": {
							"raw": "{{backend_url}}/medical-history/analytics/trends?period=6months&metrics=weight,blood_pressure,lab_values",
							"host": ["{{backend_url}}"],
							"path": ["medical-history", "analytics", "trends"],
							"query": [
								{
									"key": "period",
									"value": "6months"
								},
								{
									"key": "metrics",
									"value": "weight,blood_pressure,lab_values"
								}
							]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Health trends retrieved', function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.data).to.have.property('trends');",
									"    pm.expect(jsonData.data).to.have.property('period');",
									"});"
								]
							}
						}
					]
				},
				{
					"name": "Get Risk Assessment",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{patient_token}}"
							}
						],
						"url": {
							"raw": "{{backend_url}}/medical-history/analytics/risk-assessment",
							"host": ["{{backend_url}}"],
							"path": ["medical-history", "analytics", "risk-assessment"]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Risk assessment retrieved', function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.data).to.have.property('overall_risk_score');",
									"    pm.expect(jsonData.data).to.have.property('risk_factors');",
									"    pm.expect(jsonData.data).to.have.property('recommendations');",
									"});"
								]
							}
						}
					]
				},
				{
					"name": "Generate Health Report",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{patient_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"report_type\": \"comprehensive\",\n  \"date_range\": {\n    \"start_date\": \"2023-01-01\",\n    \"end_date\": \"2024-01-31\"\n  },\n  \"include_sections\": [\n    \"basic_info\",\n    \"allergies\",\n    \"medications\",\n    \"lab_results\",\n    \"vaccinations\",\n    \"trends\",\n    \"risk_assessment\"\n  ],\n  \"format\": \"pdf\",\n  \"purpose\": \"insurance_claim\",\n  \"recipient_doctor\": \"Dr. Sarah Wilson\"\n}"
						},
						"url": {
							"raw": "{{backend_url}}/medical-history/reports/generate",
							"host": ["{{backend_url}}"],
							"path": ["medical-history", "reports", "generate"]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Health report generated', function () {",
									"    pm.response.to.have.status(201);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.data).to.have.property('report_id');",
									"    pm.expect(jsonData.data).to.have.property('download_url');",
									"    ",
									"    // Save report ID for download test",
									"    pm.environment.set('report_id', jsonData.data.report_id);",
									"});"
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "Security and Privacy Tests",
			"item": [
				{
					"name": "Unauthorized Access to Medical History",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}"
							}
						],
						"url": {
							"raw": "{{backend_url}}/medical-history/patient/{{patient_id}}",
							"host": ["{{backend_url}}"],
							"path": ["medical-history", "patient", "{{patient_id}}"]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Admin cannot access patient medical history without proper authorization', function () {",
									"    // Admin should not have direct access to patient medical history",
									"    pm.response.to.have.status(403);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.false;",
									"    pm.expect(jsonData.message).to.include('access');",
									"});"
								]
							}
						}
					]
				},
				{
					"name": "Access Without Authentication",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{backend_url}}/medical-history/complete",
							"host": ["{{backend_url}}"],
							"path": ["medical-history", "complete"]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Unauthenticated access denied', function () {",
									"    pm.response.to.have.status(401);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.false;",
									"});"
								]
							}
						}
					]
				},
				{
					"name": "Data Validation - Invalid Input",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{patient_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"height\": -170,\n  \"weight\": \"invalid_weight\",\n  \"blood_type\": \"Invalid_Type\",\n  \"allergies\": \"not_an_array\",\n  \"age\": 150\n}"
						},
						"url": {
							"raw": "{{backend_url}}/medical-history/complete",
							"host": ["{{backend_url}}"],
							"path": ["medical-history", "complete"]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Invalid data rejected', function () {",
									"    pm.response.to.have.status(400);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.false;",
									"    pm.expect(jsonData).to.have.property('errors');",
									"});"
								]
							}
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Ensure required tokens exist",
					"if (!pm.environment.get('patient_token')) {",
					"    console.error('Patient token not found. Please run Authentication tests first.');",
					"}",
					"",
					"if (!pm.environment.get('doctor_token')) {",
					"    console.error('Doctor token not found. Please run Authentication tests first.');",
					"}",
					"",
					"if (!pm.environment.get('patient_id')) {",
					"    console.error('Patient ID not found. Please run Authentication tests first.');",
					"}"
				]
			}
		}
	]
}