{
	"info": {
		"name": "04 - EHR Tests",
		"description": "Electronic Health Records system testing - patient records, diagnoses, vital signs",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Setup - Authentication",
			"item": [
				{
					"name": "Login Doctor for EHR",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"doctor.test@example.com\",\n  \"password\": \"doctor123\"\n}"
						},
						"url": {
							"raw": "{{backend_url}}/api/auth/login",
							"host": ["{{backend_url}}"],
							"path": ["api", "auth", "login"]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Doctor login successful', function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.environment.set('doctor_token', jsonData.data.token);",
									"});"
								]
							}
						}
					]
				},
				{
					"name": "Login Patient for EHR",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"patient.test@example.com\",\n  \"password\": \"patient123\"\n}"
						},
						"url": {
							"raw": "{{backend_url}}/api/auth/login",
							"host": ["{{backend_url}}"],
							"path": ["api", "auth", "login"]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Patient login successful', function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.environment.set('patient_token', jsonData.data.token);",
									"    pm.environment.set('patient_id', jsonData.data.user.id);",
									"});"
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "Patient Search & Discovery",
			"item": [
				{
					"name": "Search Patients",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{doctor_token}}"
							}
						],
						"url": {
							"raw": "{{backend_url}}/api/ehr/patients/search?q=test",
							"host": ["{{backend_url}}"],
							"path": ["api", "ehr", "patients", "search"],
							"query": [
								{
									"key": "q",
									"value": "test"
								}
							]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Patient search successful', function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.data.patients).to.be.an('array');",
									"    ",
									"    // Save first patient ID for further tests",
									"    if (jsonData.data.patients.length > 0) {",
									"        pm.environment.set('search_patient_id', jsonData.data.patients[0].id);",
									"    }",
									"});"
								]
							}
						}
					]
				},
				{
					"name": "Search Patients by Phone",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{doctor_token}}"
							}
						],
						"url": {
							"raw": "{{backend_url}}/api/ehr/patients/search?phone=+249555",
							"host": ["{{backend_url}}"],
							"path": ["api", "ehr", "patients", "search"],
							"query": [
								{
									"key": "phone",
									"value": "+249555"
								}
							]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Patient search by phone successful', function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.data.patients).to.be.an('array');",
									"});"
								]
							}
						}
					]
				},
				{
					"name": "Search with No Results",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{doctor_token}}"
							}
						],
						"url": {
							"raw": "{{backend_url}}/api/ehr/patients/search?q=nonexistentpatient12345",
							"host": ["{{backend_url}}"],
							"path": ["api", "ehr", "patients", "search"],
							"query": [
								{
									"key": "q",
									"value": "nonexistentpatient12345"
								}
							]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Empty search results handled correctly', function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.data.patients).to.be.an('array').that.is.empty;",
									"});"
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "Patient EHR Access",
			"item": [
				{
					"name": "Get Patient EHR",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{doctor_token}}"
							}
						],
						"url": {
							"raw": "{{backend_url}}/api/ehr/patient/{{patient_id}}",
							"host": ["{{backend_url}}"],
							"path": ["api", "ehr", "patient", "{{patient_id}}"]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Patient EHR retrieved successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.data).to.have.property('patient_info');",
									"    pm.expect(jsonData.data).to.have.property('medical_history');",
									"    pm.expect(jsonData.data).to.have.property('vital_signs');",
									"    pm.expect(jsonData.data).to.have.property('diagnoses');",
									"});"
								]
							}
						}
					]
				},
				{
					"name": "Get Patient EHR - Unauthorized",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{patient_token}}"
							}
						],
						"url": {
							"raw": "{{backend_url}}/api/ehr/patient/999999",
							"host": ["{{backend_url}}"],
							"path": ["api", "ehr", "patient", "999999"]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Unauthorized EHR access denied', function () {",
									"    pm.response.to.have.status(403);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.false;",
									"});"
								]
							}
						}
					]
				},
				{
					"name": "Get Non-existent Patient EHR",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{doctor_token}}"
							}
						],
						"url": {
							"raw": "{{backend_url}}/api/ehr/patient/999999",
							"host": ["{{backend_url}}"],
							"path": ["api", "ehr", "patient", "999999"]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Non-existent patient handled correctly', function () {",
									"    pm.response.to.have.status(404);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.false;",
									"});"
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "Vital Signs Management",
			"item": [
				{
					"name": "Add Vital Signs",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{doctor_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"patient_id\": {{patient_id}},\n  \"vital_signs\": {\n    \"blood_pressure_systolic\": 120,\n    \"blood_pressure_diastolic\": 80,\n    \"heart_rate\": 72,\n    \"temperature\": 36.8,\n    \"weight\": 70.5,\n    \"height\": 175,\n    \"oxygen_saturation\": 98\n  },\n  \"notes\": \"Regular checkup vitals\"\n}"
						},
						"url": {
							"raw": "{{backend_url}}/api/ehr/vital-signs",
							"host": ["{{backend_url}}"],
							"path": ["api", "ehr", "vital-signs"]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Vital signs added successfully', function () {",
									"    pm.response.to.have.status(201);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.data).to.have.property('vital_signs_id');",
									"    pm.environment.set('vital_signs_id', jsonData.data.vital_signs_id);",
									"});"
								]
							}
						}
					]
				},
				{
					"name": "Add Vital Signs - Invalid Data",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{doctor_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"patient_id\": {{patient_id}},\n  \"vital_signs\": {\n    \"blood_pressure_systolic\": -10,\n    \"heart_rate\": \"invalid\",\n    \"temperature\": 50\n  }\n}"
						},
						"url": {
							"raw": "{{backend_url}}/api/ehr/vital-signs",
							"host": ["{{backend_url}}"],
							"path": ["api", "ehr", "vital-signs"]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Invalid vital signs rejected', function () {",
									"    pm.response.to.have.status(400);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.false;",
									"});"
								]
							}
						}
					]
				},
				{
					"name": "Get Patient Vital Signs History",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{doctor_token}}"
							}
						],
						"url": {
							"raw": "{{backend_url}}/api/ehr/vital-signs/patient/{{patient_id}}",
							"host": ["{{backend_url}}"],
							"path": ["api", "ehr", "vital-signs", "patient", "{{patient_id}}"]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Vital signs history retrieved', function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.data.vital_signs).to.be.an('array');",
									"    pm.expect(jsonData.data.vital_signs.length).to.be.greaterThan(0);",
									"});"
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "Diagnosis Management",
			"item": [
				{
					"name": "Add Diagnosis",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{doctor_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"patient_id\": {{patient_id}},\n  \"diagnosis_code\": \"Z00.00\",\n  \"diagnosis_description\": \"Encounter for general adult medical examination without abnormal findings\",\n  \"severity\": \"mild\",\n  \"status\": \"active\",\n  \"notes\": \"Regular checkup, patient appears healthy\",\n  \"treatment_plan\": \"Continue current lifestyle, follow-up in 6 months\"\n}"
						},
						"url": {
							"raw": "{{backend_url}}/api/ehr/diagnoses",
							"host": ["{{backend_url}}"],
							"path": ["api", "ehr", "diagnoses"]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Diagnosis added successfully', function () {",
									"    pm.response.to.have.status(201);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.data).to.have.property('diagnosis_id');",
									"    pm.environment.set('diagnosis_id', jsonData.data.diagnosis_id);",
									"});"
								]
							}
						}
					]
				},
				{
					"name": "Update Diagnosis",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{doctor_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"status\": \"resolved\",\n  \"notes\": \"Follow-up completed, patient doing well\",\n  \"resolution_date\": \"2024-02-15T10:30:00Z\"\n}"
						},
						"url": {
							"raw": "{{backend_url}}/api/ehr/diagnoses/{{diagnosis_id}}",
							"host": ["{{backend_url}}"],
							"path": ["api", "ehr", "diagnoses", "{{diagnosis_id}}"]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Diagnosis updated successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.data.status).to.equal('resolved');",
									"});"
								]
							}
						}
					]
				},
				{
					"name": "Get Patient Diagnoses",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{doctor_token}}"
							}
						],
						"url": {
							"raw": "{{backend_url}}/api/ehr/diagnoses/patient/{{patient_id}}",
							"host": ["{{backend_url}}"],
							"path": ["api", "ehr", "diagnoses", "patient", "{{patient_id}}"]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Patient diagnoses retrieved', function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.data.diagnoses).to.be.an('array');",
									"});"
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "EHR Security & Permissions",
			"item": [
				{
					"name": "Patient Cannot Access Other Patient EHR",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{patient_token}}"
							}
						],
						"url": {
							"raw": "{{backend_url}}/api/ehr/patient/{{search_patient_id}}",
							"host": ["{{backend_url}}"],
							"path": ["api", "ehr", "patient", "{{search_patient_id}}"]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Cross-patient access denied', function () {",
									"    pm.response.to.have.status(403);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.false;",
									"});"
								]
							}
						}
					]
				},
				{
					"name": "Patient Cannot Add Vital Signs",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{patient_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"patient_id\": {{patient_id}},\n  \"vital_signs\": {\n    \"blood_pressure_systolic\": 130,\n    \"blood_pressure_diastolic\": 85\n  }\n}"
						},
						"url": {
							"raw": "{{backend_url}}/api/ehr/vital-signs",
							"host": ["{{backend_url}}"],
							"path": ["api", "ehr", "vital-signs"]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Patient cannot add vital signs', function () {",
									"    pm.response.to.have.status(403);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.false;",
									"});"
								]
							}
						}
					]
				},
				{
					"name": "Unauthenticated Access Denied",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{backend_url}}/api/ehr/patient/{{patient_id}}",
							"host": ["{{backend_url}}"],
							"path": ["api", "ehr", "patient", "{{patient_id}}"]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Unauthenticated access denied', function () {",
									"    pm.response.to.have.status(401);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.false;",
									"});"
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "EHR Integration Tests",
			"item": [
				{
					"name": "Verify EHR Data Consistency",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{doctor_token}}"
							}
						],
						"url": {
							"raw": "{{backend_url}}/api/ehr/patient/{{patient_id}}",
							"host": ["{{backend_url}}"],
							"path": ["api", "ehr", "patient", "{{patient_id}}"]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('EHR contains all added data', function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"    ",
									"    // Verify vital signs are present",
									"    pm.expect(jsonData.data.vital_signs).to.be.an('array');",
									"    pm.expect(jsonData.data.vital_signs.length).to.be.greaterThan(0);",
									"    ",
									"    // Verify diagnoses are present",
									"    pm.expect(jsonData.data.diagnoses).to.be.an('array');",
									"    pm.expect(jsonData.data.diagnoses.length).to.be.greaterThan(0);",
									"    ",
									"    // Verify latest vital signs have correct values",
									"    let latestVitals = jsonData.data.vital_signs[0];",
									"    pm.expect(latestVitals.blood_pressure_systolic).to.equal(120);",
									"    pm.expect(latestVitals.heart_rate).to.equal(72);",
									"});"
								]
							}
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Global test for all requests",
					"pm.test('Response time is acceptable', function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(5000);",
					"});",
					"",
					"pm.test('Response has proper JSON structure', function () {",
					"    pm.response.to.be.json;",
					"    var jsonData = pm.response.json();",
					"    pm.expect(jsonData).to.have.property('success');",
					"});"
				]
			}
		}
	]
}